apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-info
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cloud-info.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.maxSurge}}
      maxUnavailable: {{.Values.maxUnavailable}}
  selector:
    matchLabels:
      {{- include "cloud-info.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or .Values.podAnnotations .Values.global.commonAnnotations }}
      annotations:
        {{- if .Values.podAnnotations }}
          {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
          {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        app: ce-cloud-info
        {{- include "cloud-info.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.commonLabels }}
        {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "cloud-info.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "cloud-info.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: cloud-info
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          readinessProbe:
            httpGet:
              path: /status
              port: 8000
            initialDelaySeconds: 25
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /status
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 10
          envFrom:
          - configMapRef:
              name: cloud-info
          env:
          {{- include "harnesscommon.renderSecretsAsEnvironmentVariables" (dict "ctx" $) | indent 10 }}
          {{- if .Values.proxy.httpsProxyEnabled }}
          - name: HTTPS_PROXY
            value: {{ .Values.proxy.httpsProxyUrl }}
          {{- end }}
          {{- if .Values.proxy.noProxyEnabled }}
          - name: NO_PROXY
            value: {{ .Values.proxy.noProxyUrl }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.extraVolumeMounts }}
          {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 10 }}
          {{- end }}
          {{- include "harnesscommon.mountRenderedSecretsAsVolumeMounts" (dict "ctx" $) | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- if .Values.extraVolumes }}
      {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 6 }}
      {{- end }}
      {{- include "harnesscommon.renderSecretsAsVolumes" (dict "ctx" $) | indent 6 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cloud-info
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
